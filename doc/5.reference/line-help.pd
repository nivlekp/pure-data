#N canvas 479 44 652 654 12;
#X floatatom 31 430 8 0 0 0 - - -;
#X msg 41 233 0 1000;
#X msg 56 255 39;
#X obj 75 17 line;
#X text 115 16 - ramp generator;
#X msg 32 210 1 1000;
#X text 103 222 send a pair to ramp to a new value;
#X text 106 257 send a single number to jump;
#X text 48 603 see also:;
#X obj 129 603 line~;
#X msg 67 280 stop;
#X text 112 282 "stop" message to stop output;
#X obj 31 404 line 0 100;
#X text 135 409 creation arguments:;
#X text 275 402 1 initial value;
#X msg 76 310 set 5;
#X text 129 310 "set" to change value (and stop) without output;
#X obj 175 603 vline~;
#X floatatom 98 367 0 0 0 0 - - -;
#X floatatom 94 340 0 0 0 0 - - -;
#X text 274 418 2 time grain in milliseconds (20 by default);
#X msg 233 542 \; pd compatibility 0.47;
#X text 53 472 COMPATIBILITY NOTE: in Pd versions before 0.48 \, a
stop message followed by a new ramp message would incorrectly ramp
from the previous start. It now ramps from wherever in the previous
segment the object was stopped at. To get the old behavior \, set "compatibility"
to 0.47 or below in Pd's command line or by a message:, f 74;
#X text 408 601 updated for Pd version 0.48;
#X text 40 50 The line object takes (target \, time) pairs and ramps
(slews) to the specified target over the time given \, updating its
output at a "grain rate" given by the creation argument. If you don't
specify a time \, line jumps immediately to the target. Note that the
middle inlet (that sets the time) does not remember old values (unlike
every other inlet in Pd) -- sending a float causes a jump in the output
regardless of whatever time value was specified in some previous message.
If the line object receives a message specifying some new target before
reaching the previous one \, it takes off from its current value.,
f 70;
#X text 126 340 middle inlet sets next ramp time (cleared when ramp
starts!);
#X text 134 368 right inlet sets grain (not cleared \, acts as normal
inlet);
#X connect 1 0 12 0;
#X connect 2 0 12 0;
#X connect 5 0 12 0;
#X connect 10 0 12 0;
#X connect 12 0 0 0;
#X connect 15 0 12 0;
#X connect 18 0 12 2;
#X connect 19 0 12 1;
